{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewPlace","auth","useContext","title","description","address","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","PlaceItem","isloading","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","console","log","coordinates","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","logoutTimer","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.ee86c46c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\n        Authorization: 'Bearer' + auth.token\n\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isloading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/api/places/${props.id}`, \n        'DELETE', \n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n        );\n      props.onDelete(props.id);\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isloading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n           Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem('userData', JSON.stringify({ userId: uid, token: token, expiration: tokenExpirationDate.toISOString() }))\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate])\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId };\r\n};","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}